
services:
  postgresdb:
    image: postgres:latest
    container_name: postgresdb
    restart: always
    environment:
      - POSTGRES_USER=dealsdbuser
      - POSTGRES_PASSWORD=70d489eaa7ca4f85ba2d
      - POSTGRES_DB=dealsdb
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "localhost", "-U", "dealsdbuser"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - maldeals_prod_network

  maldeals:
    image: emami114/maldeals
    container_name: maldeals
    build:
      context: .
      dockerfile: ./MalDealsBackend/Dockerfile
    ports:
      - "5051:5051"
    env_file:
      - .env
    environment:
      - ASPNETCORE_URLS=http://+:5051
      - ASPNETCORE_ENVIRONMENT=Production # Oder "Production" Or "Development"
      #- DATABASE_URL=${DB_CONNECTION_CONTAINER}
      - ConnectionStrings__DefaultConnection=${DATABASE_URL}
      - DATABASE_URL=${DATABASE_URL}
      - Minio__AccessKey=${MINIO_ROOT_USER}
      - Minio__SecretKey=${MINIO_ROOT_PASSWORD}
    depends_on:
      - postgresdb
      - minio
    networks:
      - maldeals_prod_network
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9090:9090"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    command: server --console-address ":9090" /data
    networks:
      - maldeals_prod_network

  #nginx:
    #image: nginx:latest
    #container_name: nginx_reverse_proxy
    #ports:
     # - "80:80"
      #- "443:443"
    #volumes:
     # - ./nginx.conf:/etc/nginx/nginx.conf:ro
    #depends_on:
     # - maldeals
    #networks:
     # - maldeals_prod_network

  caddy:
    image: caddy/caddy:latest
    container_name: caddy
    restart: unless-stopped
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - maldeals_prod_network

networks:
  maldeals_prod_network:

volumes:
  minio_data:
  postgres_data:
  caddy_data:
  caddy_config: